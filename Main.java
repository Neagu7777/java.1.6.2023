/*
 1 уровень сложности: Напишите метод на Java, который принимает на вход массив целых чисел и возвращает новый массив, содержащий только уникальные значения из исходного массива. Дубликаты должны быть удалены.

Реализуйте функцию на Java, которая принимает на вход строку и возвращает множество всех уникальных символов в этой строке. Регистр символов должен учитываться.


Напишите программу на Java, которая проверяет, содержит ли заданное множество только нечетные числа. Множество представлено массивом целых чисел.


Реализуйте метод на Java, который принимает на вход два множества целых чисел и возвращает новое множество, содержащее все элементы из обоих исходных множеств без повторений.


Задача 1 (Сложность 4/10):
Напишите класс Person, который имеет следующие поля:


name (тип String) - имя человека;
age (тип int) - возраст человека.
Реализуйте интерфейс Comparable для класса Person, чтобы объекты Person могли быть сравниваемыми на основе возраста. При сравнении двух объектов Person должно возвращаться отрицательное число, если первый объект младше второго, положительное число, если первый объект старше второго, и ноль, если объекты равны по возрасту.


Задача 2 (Сложность 3/10):
Напишите класс Book, который имеет следующие поля:


title (тип String) - название книги;
author (тип String) - автор книги;
publicationYear (тип int) - год публикации.
Реализуйте интерфейс Comparable для класса Book, чтобы объекты Book могли быть сравниваемыми на основе года публикации. При сравнении двух объектов Book должно возвращаться отрицательное число, если первая книга была опубликована раньше второй, положительное число, если первая книга была опубликована позже второй, и ноль, если книги были опубликованы в один и тот же год.


Задача 3 (Сложность 4/10):
Напишите класс Product, который имеет следующие поля:


name (тип String) - название продукта;
price (тип double) - цена продукта.
Реализуйте интерфейс Comparable для класса Product, чтобы объекты Product могли быть сравниваемыми на основе цены. При сравнении двух объектов Product должно возвращаться отрицательное число, если первый продукт дешевле второго, положительное число, если первый продукт дороже второго, и ноль, если продукты имеют одинаковую цену.


Задача 4 (Сложность 3/10):
Напишите класс Student, который имеет следующие поля:


name (тип String) - имя студента;
grade (тип int) - оценка студента.
Реализуйте интерфейс Comparable для класса Student, чтобы объекты Student могли быть сравниваемыми на основе оценки. При сравнении двух объектов Student должно возвращаться отрицательное число, если первый студент имеет более низкую оценку, положительное число, если первый студент имеет более высокую оценку, и ноль, если студенты имеют одинаковую оценку.


Задача 5 (Сложность 3/10):
Напишите класс Country, который имеет следующие поля:


name (тип String) - название страны;
population (тип int) - население страны.
Реализуйте интерфейс Comparable для класса Country, чтобы объекты Country могли быть сравниваемыми на основе населения. При сравнении двух объектов Country должно возвращаться отрицательное число, если первая страна имеет меньшее население, положительное число, если первая страна имеет большее население, и ноль, если страны имеют одинаковое население.


2 уровень сложности: 
 */